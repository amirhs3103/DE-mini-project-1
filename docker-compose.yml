version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: "zookeeper:22888:23888"
    ports:
      - 2181:2181
    volumes: 
      - ./data/zoo-1/data:/var/lib/zookeeper/data
      - ./data/zoo-1/log:/var/lib/zookeeper/log
    networks:
      - services
    restart: on-failure:10

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://:29092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,OUTSIDE://localhost:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/logs
    networks:
      - services
    restart: on-failure:10

  producer:
    container_name: producer
    build: 
      context: .
      dockerfile: Dockerfile-ubuntu
    image: producer
    extra_hosts:
      - "kafka:172.22.0.2"
    volumes:
      - ./codes:/home/codes
    command: ["tail", "-f", "/dev/null"]
    networks:
      - services
    restart: on-failure:10

  postgres:
    image: postgres:latest
    restart: always
    hostname: postgres
    environment:
      - POSTGRES_DB=miniproject_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./-db_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
      - ./backup:/backup
      - ./archive:/archive
    ports:
      - "5432:5432"
    networks:
      - services
      
networks: 
  services:
    name: miniproject_network